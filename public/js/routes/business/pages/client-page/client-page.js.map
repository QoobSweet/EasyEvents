{"version":3,"file":"client-page.js","sourceRoot":"","sources":["../../../../../../src/routes/business/pages/client-page/client-page.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\r\nimport { customElement, property, state } from 'lit/decorators.js';\r\nimport { style } from './client-page-css';\r\nimport '@material/mwc-drawer';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-list';\r\nimport '@material/mwc-list/mwc-list-item';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-icon-button';\r\nimport '@material/mwc-top-app-bar';\r\nimport '@material/mwc-icon-button';\r\nimport '@material/mwc-textfield';\r\nimport '../../../../components/form-wrapper/form-wrapper';\r\nimport '../../../../components/new-field-popup/new-field-popup';\r\nimport '../../../../components/header-bar/header-bar';\r\nimport '../../../../components/content-item/content-item';\r\nimport '../../../../components/events-calendar/events-calendar';\r\nimport ServerApi from '../../../../api/serverApi';\r\nimport Client from '../../../../definitions/client';\r\nimport Inquiry from '../../../../definitions/inquiry';\r\nimport { Message, UserI } from '../../../../definitions/definitions';\r\n\r\n\r\n\r\nexport interface InquiryState {\r\n  label: String;\r\n  color: String;\r\n}\r\n\r\n@customElement('clients-page')\r\nexport class ClientsPage extends LitElement {\r\n  @property({ type: Object }) user: UserI | null = null;\r\n  @property({ type: Array }) clients: Client[] | null = null;\r\n  @property({ type: Array }) inquiries: Inquiry[] | null = null;\r\n  @state() targetClient: string | null = null;\r\n  @state() targetInquiry: string | null = null;\r\n  @state() client: Client | null  = null;\r\n  @state() inquiry: Inquiry | null = null;\r\n  @state() slowMode: Boolean = false;\r\n  @state() showClientNewFieldPopup: Boolean = false;\r\n  @state() showInquiryNewFieldPopup: Boolean = false;\r\n  \r\n  @state() newMessageDate = new Date().toISOString().split(\"T\")[0].trim();\r\n  @state() newMessage = \"\";\r\n  serverApi = ServerApi();\r\n\r\n  static styles = style;\r\n\r\n  selectClient = (id: string) => {\r\n    this.targetClient = id;\r\n    this.requestUpdate();\r\n  }\r\n  selectInquiry = (id: string) => {\r\n    this.targetInquiry = id;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  createNewClient = () => {\r\n    console.log(\"testing\");\r\n    if (this.user) {\r\n      new Client().init(this.user, this.serverApi, (id: string) => console.log(id));\r\n    }\r\n  }\r\n  createNewInquiry = () => {\r\n    if (this.user && this.client) {\r\n      const entry = new Inquiry();\r\n      entry.parentClientId = this.client.id;\r\n      entry.init(this.user, this.serverApi, (id: string) => console.log(id));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @property id target client id\r\n   * @returns target | first existing | newly created Client if none exist\r\n   */\r\n  getClient = (): Client => {\r\n    if (this.user && this.clients) {\r\n      //create new instance & retrieve raw inquiry data of target id or first entry if any\r\n      const entry = new Client();\r\n      const rawEntry = this.targetClient\r\n        ? this.clients.filter((client: Client) => client.id === this.targetClient)[0]\r\n        : this.clients[0];\r\n      entry.mergeModel(rawEntry);\r\n      entry.init(this.user, this.serverApi);\r\n      this.targetClient = entry.id;\r\n      this.client = entry;\r\n      return entry;\r\n    } else {\r\n      throw new Error('Clients have not been loaded yet.');\r\n    }\r\n  }\r\n\r\n  getInquiry = (): Inquiry => {\r\n    if (this.user && this.client && this.inquiries) {\r\n      //create new instance & retrieve raw inquiry data of target id or first entry if any\r\n      const entry = new Inquiry();\r\n      const rawEntry = this.targetInquiry\r\n        ? this.inquiries.filter((inquiry) => inquiry.id === this.targetInquiry)[0]\r\n        : this.inquiries[0];\r\n      entry.mergeModel(rawEntry);\r\n      entry.init(this.user, this.serverApi);\r\n      this.targetInquiry = entry.id;\r\n      this.inquiry = entry;\r\n      return entry;\r\n    } else {\r\n      throw new Error('Inquiries have not been loaded yet.');\r\n    }\r\n\r\n  }\r\n\r\n  updateDB = (event: { detail: { data: { collectionKey: string; docKey: string; value: unknown; fieldKey: string}}}) => {\r\n    if(this.user) {\r\n      const data = event.detail.data;\r\n\r\n      const collectionKey = data.collectionKey;\r\n      const docKey = data.docKey;\r\n      const fieldValue = data.value;\r\n      const fieldKey = data.fieldKey;\r\n\r\n      //push change to database\r\n      this.serverApi.setFieldValue(collectionKey, docKey, fieldKey, fieldValue);\r\n    }\r\n  }\r\n\r\n  updated = () => {\r\n    if (this.clients) {\r\n\r\n      if (!this.client || this.client.id !== this.targetClient) {\r\n        this.getClient();\r\n      } else {\r\n        //make sure to update values\r\n        const rawClient = this.clients.filter((client: Client) => client.id === this.targetClient)[0];\r\n        for (const [key] of Object.entries(rawClient)) {\r\n          if (rawClient[key] !== this.client[key]) {\r\n            this.client.mergeModel(rawClient);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (this.client && this.clients && this.inquiries) {\r\n        if (!this.inquiry || this.inquiry.id !== this.targetInquiry) {\r\n          this.getInquiry();\r\n        } else {\r\n          //make sure to update values\\\r\n          const rawInquiry = this.inquiries.filter((inquiry: Inquiry) => inquiry.id === this.targetInquiry)[0];\r\n          for (const [key] of Object.entries(rawInquiry)) {\r\n            if (rawInquiry[key] !== this.inquiry[key]) {\r\n              this.inquiry.mergeModel(rawInquiry);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  triggerFormRefresh = () => {\r\n    this.client = null;\r\n    this.inquiry = null;\r\n  }\r\n  \r\n  addMessage = () => {\r\n    if(this.inquiry) {\r\n      console.log(\"attempting to add message\");\r\n      const oldMessages = this.inquiry.coorespondence ? this.inquiry.coorespondence : [];\r\n      if(this.newMessage !== \"\" && this.newMessageDate !== \"\" && this.user){\r\n        oldMessages.push({\r\n          date: this.newMessageDate as string,\r\n          username: this.user.name.value as string,\r\n          message: this.newMessage as string\r\n        });\r\n        this.inquiry.updateField(this.serverApi, \"coorespondence\", oldMessages);\r\n        this.newMessage = \"\";\r\n        this.newMessageDate = new Date().toISOString().split(\"T\")[0].trim();\r\n      }\r\n    }\r\n  }\r\n\r\n  removeClient = () => {\r\n    if (this.user && this.client) {\r\n      this.client.remove(this.user, this.serverApi);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.user && this.clients && this.inquiries) {\r\n      return html`\r\n        <mwc-drawer slot=\"content\">\r\n          <mwc-list>\r\n            \r\n            <!-- Client Creation Button -->\r\n            <mwc-list-item class=\"list-button add\" graphic=\"icon\" @click=\"${this.createNewClient}\" selected activated>\r\n              <span>New Client</span>\r\n              <mwc-icon slot=\"graphic\" class=\"inverted\">add</mwc-icon>\r\n            </mwc-list-item>\r\n\r\n            <!-- Map all Clients as list items -->\r\n            ${this.clients.map(client => {\r\n              return html`\r\n              ${this.client && this.client.id === client.id ? html`\r\n                <mwc-list-item class=\"client-list-item\" graphic=\"avatar\" twoline @click=\"${() => { this.selectClient(client.id); }}\" selected activated>\r\n                  <span>${client.name.value}</span>\r\n                  <span slot=\"secondary\">${client.email.value}</span>\r\n                  <mwc-icon slot=\"graphic\" class=\"inverted\">account_circle</mwc-icon>\r\n                </mwc-list-item>\r\n              ` : html`\r\n                <mwc-list-item class=\"client-list-item\" graphic=\"avatar\" twoline @click=\"${() => { this.selectClient(client.id); }}\">\r\n                  <span>${client.name.value}</span>\r\n                  <span slot=\"secondary\">${client.email.value}</span>\r\n                  <mwc-icon slot=\"graphic\" class=\"inverted\">account_circle</mwc-icon>\r\n                </mwc-list-item>\r\n              `}\r\n                \r\n                <!-- if Active Client, Map related inquiries as list items -->\r\n                ${this.client && this.client.id === client.id ? html`\r\n                  <mwc-list class=\"nested\">\r\n                    <mwc-list-item class=\"inquiry-list-item list-button add\" graphic=\"icon\" @click=\"${this.createNewInquiry}\" selected activated>\r\n                      <span>New Inquiry</span>\r\n                      <mwc-icon slot=\"graphic\" class=\"inverted\">add</mwc-icon>\r\n                    </mwc-list-item>\r\n\r\n                    <!-- Map all Inquiries related to Client as list items -->\r\n                    ${this.client && this.inquiries\r\n                      ? this.inquiries.filter(inquiry => inquiry.parentClientId === this.targetClient).map(inquiry => {\r\n                        return this.inquiry && this.inquiry.id === inquiry.id\r\n                          ? html`\r\n                              <mwc-list-item class=\"inquiry-list-item\" graphic=\"icon\" @click=\"${() => { this.selectInquiry(inquiry.id); }}\" selected activated>\r\n                                ${inquiry.businessName.value}\r\n                                <mwc-icon slot=\"graphic\" class=\"inverted\">subdirectory_arrow_right</mwc-icon>\r\n                              </mwc-list-item>`\r\n                          : html`\r\n                              <mwc-list-item class=\"inquiry-list-item\" graphic=\"icon\" @click=\"${() => { this.selectInquiry(inquiry.id); }}\">\r\n                                ${inquiry.businessName.value}\r\n                                <mwc-icon slot=\"graphic\" class=\"inverted\">subdirectory_arrow_right</mwc-icon>\r\n                              </mwc-list-item>`\r\n                      })\r\n                      : html``\r\n                    }\r\n                  </mwc-list>\r\n                ` : null}\r\n            `})}\r\n          </mwc-list>\r\n          ${this.client !== null ? html`\r\n            ${this.showClientNewFieldPopup ? html`\r\n              <new-field-popup\r\n                .serverApi=\"${this.serverApi}\"\r\n                .targetForm=\"${this.client}\"\r\n                @closepopup=\"${() => { this.showClientNewFieldPopup = false; this.triggerFormRefresh(); }}\"\r\n              ></new-field-popup>\r\n            `: null}\r\n            <div slot=\"appContent\" style=\"display:flex; height: 100%;\">\r\n              <content-item id=\"client-info\">\r\n                <div class=\"title-bar\">\r\n                  <h1>${this.client.name.value}</h1>\r\n                  <div class=\"button-collection-wrapper\">\r\n                    <div class=\"button-collection\">\r\n                      <div class=\"button-wrapper\">\r\n                        <mwc-icon-button class=\"delete-icon\" icon=\"delete_forever\" @click=\"${this.removeClient}\"></mwc-icon-button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <hr class=\"rounded\">\r\n\r\n                <!-- Main Client Info -->\r\n                <div id=\"client-header\">\r\n                  <div id=\"client-portrait\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png\"/>\r\n                  </div>\r\n                  <div class=\"client-editable\">\r\n                    <form-wrapper\r\n                      @value-changed=\"${this.updateDB}\"\r\n                      .serverApi=\"${this.serverApi}\"\r\n                      .docObject=\"${this.client}\"\r\n                      .size=\"${20}\"\r\n                    >\r\n                    </form-wrapper>\r\n                    <div class=\"button-collection-wrapper\">\r\n                      <div class=\"button-collection\">\r\n                        <div class=\"button-wrapper\">\r\n                          <mwc-button class=\"form-button\" label=\"Add Field\" @click=\"${() => { this.showClientNewFieldPopup = true; }}\"></mwc-button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                ${this.inquiry ? html`\r\n                  ${this.showInquiryNewFieldPopup ? html`\r\n                    <new-field-popup\r\n                      .serverApi=\"${this.serverApi}\"\r\n                      .docObject=\"${this.inquiry}\"\r\n                      @closepopup=\"${() => { this.showInquiryNewFieldPopup = false; this.triggerFormRefresh(); }}\"\r\n                    ></new-field-popup>\r\n                  `: html``}\r\n\r\n                  <!-- Inquiry Info -->\r\n                  <div id=\"inquiry-info\">\r\n                    ${this.inquiry.id === this.targetInquiry && this.inquiry.parentClientId === this.client.id ? html`\r\n                      <!-- show form if inquiry selected -->\r\n                      <form-wrapper\r\n                        @value-changed=\"${this.updateDB}\"\r\n                        .serverApi=\"${this.serverApi}\"\r\n                        .docObject=\"${this.inquiry}\"\r\n                        .showDelete=\"${true}\"\r\n                        .size=\"${20}\" \r\n                        .title=\"${'Inquiry Info'}\"\r\n                      >\r\n                      </form-wrapper>\r\n                      <div class=\"button-collection-wrapper\">\r\n                        <div class=\"button-collection\">\r\n                          <div class=\"button-wrapper\">\r\n                            <mwc-button class=\"form-button\" label=\"Add Field\" @click=\"${() => { this.showInquiryNewFieldPopup = true; }}\"></mwc-button>\r\n                          </div>\r\n                        </div>\r\n                      </div>`\r\n                    : html``}\r\n                  </div>\r\n                  <div id=\"coorespondence\">\r\n                    <h2>Coorespondence</h2>\r\n                    <div id=\"coorespondence-wrapper\">\r\n                      <div id=\"coorespondence-messages\">\r\n                        ${this.inquiry.coorespondence ? this.inquiry.coorespondence.map((message: Message) => {\r\n                          return html`\r\n                            <p class=\"coorespondence-message\" title=\"${message.username}\">${message.date.replaceAll(\"-\",\"/\") + \" - \"}<b>${message.message}</b></p>\r\n                          `;\r\n                        }) : null}\r\n                      </div>\r\n                      <div id=\"coorespondence-new-message-field\">\r\n                        <mwc-textfield id=\"new-message-date\" type=\"date\"\r\n                          value=\"${this.newMessageDate}\"\r\n                          @change=\"${(event: any) => this.newMessageDate = event.path[0].value}\"></mwc-textfield>\r\n                        <mwc-textfield id=\"new-message-content\" type=\"text\" id=\"coorespondence-input\" placeholder=\"New Message...\" value=\"${this.newMessage}\" outlined\r\n                          @change=\"${(event: any) => this.newMessage = event.path[0].value}\"></mwc-textfield>\r\n                        <mwc-icon-button id=\"message-submit\" icon=\"login\" @click=\"${this.addMessage}\"></mwc-icon-button>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n                `: html``}\r\n              </content-item>\r\n              <content-item id=\"calendar\">\r\n              </content-item>\r\n            </div>\r\n          ` : null}\r\n        </mwc-drawer>\r\n      `;\r\n    } else {\r\n      return html`Loading...`;\r\n    }\r\n  }\r\n}"]}