{"version":3,"file":"events-calendar.js","sourceRoot":"","sources":["../../../../src/components/events-calendar/events-calendar.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\r\nimport { customElement, property, state } from 'lit/decorators.js';\r\nimport { Calendar } from '@fullcalendar/core';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport { style } from './events-calendar-css';\r\nimport { Event } from '../../definitions/event'\r\nimport Inquiry from '../../definitions/inquiry';\r\nimport ServerApi from '../../api/serverApi';\r\n\r\nexport interface FormItem {\r\n    label: String;\r\n    value: String;\r\n}\r\n\r\n@customElement('events-calendar')\r\nexport class EventsCalendar extends LitElement {\r\n    @property({ type: Array }) inquiries: Inquiry[] | null = null;\r\n    @property({ attribute: false }) scrollToTime = null;\r\n    @state() events: Event[] | null = null;\r\n    @state() calendar: Calendar | null = null;\r\n    serverApi = ServerApi();\r\n\r\n    static styles = style;\r\n    \r\n    handleDateSelect = (selectInfo: any) => {\r\n        console.log(selectInfo);\r\n        //calendar.props.children.setScrollToTime(dateObj)\r\n\r\n        //prompt(selectInfo.startStr)\r\n        const calendarApi = selectInfo.view.calendar\r\n\r\n        calendarApi.unselect() // clear date selection \r\n    }\r\n\r\n/*     handleEventChange = (apiResponse) => {\r\n        if(apiResponse.oldEvent && apiResponse.event){\r\n            const eventDbId = apiResponse.event.id;\r\n\r\n            const oldEvent = apiResponse.oldEvent;\r\n            const newEvent = apiResponse.event;\r\n            \r\n            const oldStartDate = oldEvent.startStr.split('T');\r\n            const newStartDate = newEvent.startStr.split('T');\r\n\r\n            const oldEndDate = oldEvent.endStr.split('T');\r\n            const newEndDate = newEvent.endStr.split('T');\r\n\r\n\r\n            console.log([oldEvent, newEvent, newStartDate])\r\n\r\n            //compare dates [0]\r\n            if(newStartDate[0] !== oldStartDate[0]){\r\n                this.serverApi.setFieldValue('inquiries', eventDbId, 'eventDate', newStartDate[0]);\r\n            }\r\n            //compare times [1]\r\n            if(newStartDate[1] !== oldStartDate[1]){\r\n                this.serverApi.setFieldValue('inquiries', eventDbId, 'startTime', newStartDate[0]);\r\n            }\r\n            if(newEndDate[1] !== oldEndDate[1]){\r\n                this.serverApi.setFieldValue('inquiries', eventDbId, 'stopTime', newStartDate[0]);\r\n            }\r\n        }\r\n    } */\r\n\r\n    generateCalendarEvents = () => {\r\n        console.log('attempting to load events');\r\n        console.log(this.inquiries);\r\n        const events = [];\r\n        \r\n        if(this.inquiries){\r\n            for(let i = 0; i < this.inquiries.length; i++){\r\n                const inquiry = this.inquiries[i];\r\n                console.log(inquiry.lastContact)\r\n                if (inquiry) {\r\n                    if (inquiry.dateReceived.value !== '') {\r\n                        let date: string = inquiry.dateReceived.value as string;\r\n                        if (inquiry.lastContact.value !== '') {\r\n                            date = inquiry.lastContact.value as string;\r\n                        }\r\n                        if (inquiry.businessName.value) {\r\n                            events.push(new Event(inquiry.id, inquiry.businessName.value as string, date, inquiry.status.value as string));\r\n                        }\r\n                    }\r\n                } \r\n            }\r\n            this.events = events;\r\n        }\r\n        if (this.events && this.events[0]) {\r\n            //if (this.calendar) { this.calendar.setOption('events', this.events) }\r\n        }\r\n    }\r\n\r\n/*     selectEvent = (eventInfo) => {\r\n        console.log(eventInfo);\r\n        this.timeline.gotoDate(eventInfo.event.startStr);\r\n        this.timeline.scrollToTime(eventInfo.event.startStr.split('T')[1])\r\n\r\n        let event = new CustomEvent('inquiry-selected', {\r\n            detail: {\r\n            data: eventInfo.event.id,\r\n            message: 'Event Selected'\r\n            },\r\n            bubbles: true,\r\n            composed: true\r\n        });\r\n        this.dispatchEvent(event);\r\n    } */\r\n\r\n/*     renderEventContent = (eventInfo) => {\r\n        function addZero(i) {\r\n            if (i < 10) {\r\n                i = \"0\" + i;\r\n            } else if (i > 12) {\r\n                i = i - 12;\r\n            }\r\n            return i;\r\n          }\r\n        \r\n        \r\n        const start = eventInfo.event.start; //date object\r\n        const end = eventInfo.event.end; //date object\r\n\r\n        const sHour = addZero(start.getHours());\r\n        const sMin = addZero(start.getMinutes());\r\n        const sString = sHour + ':' + sMin\r\n\r\n        let eString = '';\r\n\r\n        if(end){\r\n            const eHour = addZero(end.getHours());\r\n            const eMin  = addZero(end.getMinutes());\r\n            eString = '-' + eHour + ':' + eMin;\r\n        }\r\n\r\n        return html`<i className=\"cal-popup-disp-item\">{eventInfo.event.title}</i>`;\r\n    } */\r\n\r\n    getCalendar = () => {\r\n        console.log('grabbing calendar');\r\n        setTimeout(() => {\r\n            const calendarRoot = this.renderRoot.querySelector('#calendar') as HTMLElement;\r\n\r\n            //calendar should not attempt render if no calendarRoot\r\n            if (calendarRoot) {\r\n                this.calendar = new Calendar(calendarRoot, {\r\n                    initialView: 'dayGridMonth',\r\n                    plugins: [dayGridPlugin, timeGridPlugin],\r\n                    headerToolbar: { left: 'title', center: '', right: 'today prev next' },\r\n                    height: '64%',\r\n                    editable: true,\r\n                    selectable: true,\r\n                    selectMirror: true,\r\n                    dayMaxEvents: true,\r\n                    events: this.events ? this.events : [],\r\n                    eventDisplay: 'list',\r\n                    //select: this.handleDateSelect,\r\n                    //eventClick: this.selectEvent,\r\n                    //eventChange: this.handleEventChange,\r\n                    //eventContent: this.renderEventContent, // custom render function\r\n                });\r\n            }\r\n        }, 500);\r\n    }\r\n    \r\n    firstUpdated() {\r\n        console.log('first update');\r\n        this.getCalendar();\r\n    }\r\n\r\n    updated() {\r\n        this.calendar ? this.calendar.render() : this.getCalendar();\r\n        setTimeout(() => {\r\n            this.calendar ? this.calendar.updateSize() : {};\r\n        }, 2000)\r\n    }\r\n\r\n    shouldUpdate(changedProperties: any) {\r\n        changedProperties.forEach((oldValue: any, propName: string) => {\r\n            console.log(`${propName} changed. oldValue: ${oldValue}`);\r\n            if (propName == 'inquiries') {\r\n                this.generateCalendarEvents();\r\n                this.getCalendar();\r\n\r\n                setTimeout(() => {\r\n                    console.log('attempting to rerender');\r\n                    if (this.calendar) {\r\n                        this.calendar.render();   \r\n                    }\r\n                }, 500)\r\n            }\r\n        });\r\n        return true;\r\n      }\r\n\r\n    render() {\r\n        this.generateCalendarEvents();\r\n        return html`\r\n            <link href=\"https://www.unpkg.com/@fullcalendar/common@5.7.0/main.css\" rel=\"stylesheet\">\r\n            <div id=\"calendar\"></div>\r\n        `;\r\n    }\r\n}"]}