{"version":3,"file":"easy-events.js","sourceRoot":"","sources":["../../src/easy-events.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AACnE,OAAO,SAAS,MAAM,iBAAiB,CAAC;AAExC,OAAO,iBAAiB,CAAC;AAGzB,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,UAAU;IAA1C;;QAC+B,eAAU,GAAG,KAAK,CAAC;QACvC,SAAI,GAAiB,IAAI,CAAC;QACnC,cAAS,GAAG,SAAS,EAAE,CAAC;QACxB,YAAO,GAAG,KAAK,CAAC;QAEhB,oBAAe,GAAG,GAAG,EAAE;YACrB,cAAc;YACd,MAAM,WAAW,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,qBAAqB,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;YAC/G,IAAI,IAAI,CAAC;YACT,IAAI,WAAW,EAAE;gBAAE,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;aAAE;YAEpD,IAAI,CAAC,IAAI,EAAE;gBAAE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAAE;iBAClC;gBACH,8FAA8F;gBAC9F,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;QACH,CAAC,CAAA;QAED,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAA;QAGD,SAAI,GAAY,KAAK,CAAC;IAWxB,CAAC;IATC,MAAM;QACJ,OAAO,IAAI,CAAA;;yBAEU,IAAI,CAAC,eAAe;yBACpB,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO;mBACrC,IAAI,CAAC,IAAI;;KAEvB,CAAC;IACJ,CAAC;CACF,CAAA;AAnC8B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;8CAAoB;AACvC;IAAR,KAAK,EAAE;wCAA2B;AAFxB,UAAU;IADtB,aAAa,CAAC,aAAa,CAAC;GAChB,UAAU,CAoCtB;SApCY,UAAU","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport ServerApi from './api/serverApi';\nimport { UserI } from './definitions/definitions';\nimport './routes/router';\n\n@customElement('easy-events')\nexport class EasyEvents extends LitElement {\n  @property({ type: Boolean }) isLoggedIn = false;\n  @state() user: UserI | null = null;\n  serverApi = ServerApi();\n  isDebug = false;\n\n  testSessionAuth = () => {\n    //grab api key\n    const sessionUser = window.sessionStorage.getItem(`firebase:authUser:${this.serverApi.getApiKey()}:[DEFAULT]`);\n    let user;\n    if (sessionUser) { user = JSON.parse(sessionUser); }\n\n    if (!user) { this.isLoggedIn = false; }\n    else {\n      //pull user Map Document from file. match data in case different or google profile has changed\n      this.user = user;\n      this.isLoggedIn = true;\n    }\n  }\n\n  firstUpdated = () => {\n    this.testSessionAuth();\n  }\n\n\n  test: Boolean = false;\n\n  render() {\n    return html`\n      <page-router\n        @login-change=\"${this.testSessionAuth}\"\n        ?isloggedin = \"${this.isLoggedIn || this.isDebug}\"\n        .user = \"${this.user}\"\n      ></page-router>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'easy-events': EasyEvents;\n  }\n}"]}